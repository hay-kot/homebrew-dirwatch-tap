# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Dirwatch < Formula
  desc "dirwatch is a simple, standalone tool that watches a path and runs a command whenever it
detects a matching event.
"
  homepage ""
  version "0.0.12"
  license "MIT"

  depends_on "git"
  depends_on "go" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/hay-kot/dirwatch/releases/download/v0.0.12/dirwatch_Darwin_x86_64.tar.gz"
      sha256 "7d447a0cfdf31b73b230e581b5f326a08ae5cd84e133d89e887325fae78d63b1"

      def install
        bin.install "dirwatch"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/hay-kot/dirwatch/releases/download/v0.0.12/dirwatch_Darwin_arm64.tar.gz"
      sha256 "ab831750be99ed25b2b152253499484bdaf90e9841a7f7b13bf1c19f9f83c03e"

      def install
        bin.install "dirwatch"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/hay-kot/dirwatch/releases/download/v0.0.12/dirwatch_Linux_x86_64.tar.gz"
      sha256 "c1b8752555a750b638ebcd58f59995a651420d497426793d1495b595e58cf708"

      def install
        bin.install "dirwatch"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/hay-kot/dirwatch/releases/download/v0.0.12/dirwatch_Linux_arm64.tar.gz"
      sha256 "aab43082517d7c131d80385aeac1fa6150d9a69a0af72c8a3198dcf7e89602b9"

      def install
        bin.install "dirwatch"
      end
    end
  end

  service do
    run [opt_bin/"dirwatch", "--config", etc/"dirwatch.toml", "watch"]
    environment_variables PATH: std_service_path_env
    keep_alive true
    error_log_path var/"log/dirwatch.log"
    log_path var/"log/dirwatch.log"
  end

  test do
    system "#{bin}/dirwatch version"
  end
end

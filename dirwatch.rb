# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Dirwatch < Formula
  desc "dirwatch is a simple, standalone tool that watches a path and runs a command whenever it
detects a matching event.
"
  homepage ""
  version "0.0.11"
  license "MIT"

  depends_on "git"
  depends_on "go" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/hay-kot/dirwatch/releases/download/v0.0.11/dirwatch_Darwin_x86_64.tar.gz"
      sha256 "9cf4ba386bbf48290ae0db8a832ef8e15ab28dc19ffc214481a09b0e1c4f5e48"

      def install
        bin.install "dirwatch"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/hay-kot/dirwatch/releases/download/v0.0.11/dirwatch_Darwin_arm64.tar.gz"
      sha256 "4233ce5cb8aefb8eeaa021df596fc0ba830c087f292ba22c9d2172f70ab354bf"

      def install
        bin.install "dirwatch"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/hay-kot/dirwatch/releases/download/v0.0.11/dirwatch_Linux_x86_64.tar.gz"
      sha256 "b04cdc391482f5ade602fd094c18ad4e6a5d1531323686b6516103e5710d3e1f"

      def install
        bin.install "dirwatch"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/hay-kot/dirwatch/releases/download/v0.0.11/dirwatch_Linux_arm64.tar.gz"
      sha256 "837a530571af499e862697f04be127caf1aac31e68243b99ef14d3f6f31f4a0b"

      def install
        bin.install "dirwatch"
      end
    end
  end

  service do
    run [opt_bin/"dirwatch", "--config", etc/"dirwatch.toml", "watch"]
    environment_variables PATH: std_service_path_env
    keep_alive true
    error_log_path var/"log/dirwatch.log"
    log_path var/"log/dirwatch.log"
  end

  test do
    system "#{bin}/dirwatch version"
  end
end

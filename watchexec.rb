# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Watchexec < Formula
  desc "watchexec is a simple, standalone tool that watches a path and runs a command whenever it
detects a matching event.
"
  homepage ""
  version "0.0.3"
  license "MIT"

  depends_on "git"
  depends_on "go" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/hay-kot/watchexec/releases/download/v0.0.3/watchexec_Darwin_x86_64.tar.gz"
      sha256 "7ff196bdaeb988d886a8064d192256ad8d7ef89b91695d98e13bd29ba02b1bef"

      def install
        bin.install "watchexec"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/hay-kot/watchexec/releases/download/v0.0.3/watchexec_Darwin_arm64.tar.gz"
      sha256 "f9cb83b72f59e9367f39188edf647e219f45f8be115ad90705f37f9f4543486c"

      def install
        bin.install "watchexec"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/hay-kot/watchexec/releases/download/v0.0.3/watchexec_Linux_x86_64.tar.gz"
      sha256 "c49f67f4e2719010b55061cf1868391f43b80e3277ff2d7f58ef2a5ed82b2b0c"

      def install
        bin.install "watchexec"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/hay-kot/watchexec/releases/download/v0.0.3/watchexec_Linux_arm64.tar.gz"
      sha256 "db33c41a53bad825881eb231ef9b73937e115471bed269e0945fb1ebec78e6d1"

      def install
        bin.install "watchexec"
      end
    end
  end

  service do
    run [opt_bin/"watchexec", "watch"]
    environment_variables OIQ_OTEL_COLLECTOR_HOME: opt_prefix
    keep_alive true
  end

  test do
    system "#{bin}/watchexec version"
  end
end

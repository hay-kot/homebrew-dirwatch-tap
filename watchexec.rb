# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Watchexec < Formula
  desc "watchexec is a simple, standalone tool that watches a path and runs a command whenever it
detects a matching event.
"
  homepage ""
  version "0.0.4"
  license "MIT"

  depends_on "git"
  depends_on "go" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/hay-kot/watchexec/releases/download/v0.0.4/watchexec_Darwin_x86_64.tar.gz"
      sha256 "720ded63fcbd18e1b2c70606325c675ebb8c999c337a98d5ba13b6d59f089a6e"

      def install
        bin.install "watchexec"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/hay-kot/watchexec/releases/download/v0.0.4/watchexec_Darwin_arm64.tar.gz"
      sha256 "d22ff8a8c9c633099e3dc06018c6921999a7304ee225679128a9967bbbd8dc61"

      def install
        bin.install "watchexec"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/hay-kot/watchexec/releases/download/v0.0.4/watchexec_Linux_x86_64.tar.gz"
      sha256 "c336ac1161b9a1528ddc1049df1c72aa388474829e82b55eb475878f3cdf1d6b"

      def install
        bin.install "watchexec"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/hay-kot/watchexec/releases/download/v0.0.4/watchexec_Linux_arm64.tar.gz"
      sha256 "5ad784f64e76324f0fa403ff5347e4d61bc286e2fce5909943e6bca051825d68"

      def install
        bin.install "watchexec"
      end
    end
  end

  service do
    run [opt_bin/"watchexec", "watch"]
    environment_variables OIQ_OTEL_COLLECTOR_HOME: opt_prefix
    keep_alive true
  end

  test do
    system "#{bin}/watchexec version"
  end
end
